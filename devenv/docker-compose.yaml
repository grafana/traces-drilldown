version: '3.0'

services:
  grafana:
    container_name: 'grafana-explore-traces'
    build:
      context: ../.config
      args:
        grafana_image: ${GRAFANA_IMAGE:-grafana-dev}
        grafana_version: ${GRAFANA_VERSION:-12.2.0-17432607250}
    ports:
      - 3000:3000/tcp
    volumes:
      - ../dist:/var/lib/grafana/plugins/grafana-explore-traces
      - ../provisioning:/etc/grafana/provisioning

  tempo:
    image: grafana/tempo:latest@sha256:009af35797ad7169d264436e3d06e1173afa6c3848bfd8f09d5e914b310a4819
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo.yaml:/etc/tempo.yaml
    ports:
      - "3200:3200"   # tempo

  # generates uninteresting traces, but is useful for testing
  k6-tracing:
    image: ghcr.io/grafana/xk6-client-tracing:latest@sha256:c176112df6a6aac970d54b0b2e2db950642378496c6967adc8a401179819fab0
    environment:
      - ENDPOINT=tempo:4317
    restart: always
    depends_on:
      - tempo

  # A collection of services designed to generate real telemetry
  # Two regions are created: eu-east and us-west. Each region has a server and a requester.
  # eu-east will fail occassionall, but us-west will always succeed to allow for exploration
  # at the resource level
  #  See github.com/grafana/intro-to-mltp

  # A RabbitMQ queue used to send message between the requester and the server microservices.
  mythical-queue:
    image: rabbitmq:management@sha256:294b01e1796a8acede4619f32a1c394fae1f8021e57986ea01aad38dc2a4f502
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics check_running
      interval: 5s
      timeout: 30s
      retries: 10

  # A postgres DB used to store data by the API server microservice.
  mythical-database:
    image: postgres:14.5@sha256:135c62a8134dcef829a1e4f5568bfae44bcfa2c75659ff948f43c71964366aa4
    restart: always
    environment:
      POSTGRES_PASSWORD: "mythical"
    ports:
      - "5432:5432"

  # A microservice that makes requests to the API server microservice. Requests are also pushed onto the mythical-queue.
  mythical-requester-A:
    image: grafana/intro-to-mltp:mythical-beasts-requester-0.3.1@sha256:2643fb2e2cd1100e9edecb44d67c82cfa436ea97ff23aeeb646ea063776e539b
    restart: always
    depends_on:
      mythical-queue:
        condition: service_healthy
      mythical-server-A:
        condition: service_started
    environment:
      - MYTHICAL_SERVER_HOST_PORT=mythical-server-A:4000
      - NAMESPACE=production
      - TRACING_COLLECTOR_HOST=tempo
      - TRACING_COLLECTOR_PORT=4317
      - OTEL_EXPORTER_OTLP_TRACES_INSECURE=true
      - OTEL_RESOURCE_ATTRIBUTES=ip=1.2.3.4,region=eu-east

  # The API server microservice.
  mythical-server-A:
    image: grafana/intro-to-mltp:mythical-beasts-server-0.3.1@sha256:d58db9e2bb1c3ffc1a29a7732e2f700bbbeea86a91936c53fc8623e5c39ae648
    restart: always
    depends_on:
      - mythical-database
    environment:
      - NAMESPACE=production
      - TRACING_COLLECTOR_HOST=tempo
      - TRACING_COLLECTOR_PORT=4317
      - OTEL_EXPORTER_OTLP_TRACES_INSECURE=true
      - OTEL_RESOURCE_ATTRIBUTES=ip=1.2.3.5,region=eu-east

   # A microservice that makes requests to the API server microservice. Requests are also pushed onto the mythical-queue.
  mythical-requester-B:
    image: grafana/intro-to-mltp:mythical-beasts-requester-0.3.1@sha256:2643fb2e2cd1100e9edecb44d67c82cfa436ea97ff23aeeb646ea063776e539b
    restart: always
    depends_on:
      mythical-queue:
        condition: service_healthy
      mythical-server-B:
        condition: service_started
    environment:
      - MYTHICAL_SERVER_HOST_PORT=mythical-server-B:4000
      - NAMESPACE=production
      - TRACING_COLLECTOR_HOST=tempo
      - TRACING_COLLECTOR_PORT=4317
      - OTEL_EXPORTER_OTLP_TRACES_INSECURE=true
      - OTEL_RESOURCE_ATTRIBUTES=ip=1.2.4.4,region=us-west

  # The API server microservice.
  mythical-server-B:
    image: grafana/intro-to-mltp:mythical-beasts-server-0.3.1@sha256:d58db9e2bb1c3ffc1a29a7732e2f700bbbeea86a91936c53fc8623e5c39ae648
    restart: always
    depends_on:
      - mythical-database
    environment:
      - NAMESPACE=production
      - ALWAYS_SUCCEED=true
      - TRACING_COLLECTOR_HOST=tempo
      - TRACING_COLLECTOR_PORT=4317
      - OTEL_EXPORTER_OTLP_TRACES_INSECURE=true
      - OTEL_RESOURCE_ATTRIBUTES=ip=1.2.4.5,region=us-west

  # A microservice that consumes requests from the mythical-queue
  mythical-recorder:
    image: grafana/intro-to-mltp:mythical-beasts-recorder-latest@sha256:dae10980a1f422d659d0862275f77dca42a735681c4c65a27d78eb719190e13d
    restart: always
    depends_on:
      mythical-queue:
        condition: service_healthy
    environment:
      - NAMESPACE=production
      - TRACING_COLLECTOR_HOST=tempo
      - TRACING_COLLECTOR_PORT=4317
      - OTEL_EXPORTER_OTLP_TRACES_INSECURE=true
      - OTEL_RESOURCE_ATTRIBUTES=ip=1.2.3.5
